1. Чем различается синхронизация потоков и процессов?
Синхронизация потоков:
Потоки (threads) — это части одного процесса, которые выполняются одновременно и разделяют одно и то же адресное пространство.
Синхронизация потоков проще и быстрее, поскольку все потоки имеют доступ к общим ресурсам напрямую.
Для синхронизации потоков часто используются легковесные механизмы, такие как критические секции и события.
Синхронизация процессов:
Процессы — это отдельные экземпляры программ, которые выполняются независимо и имеют свое собственное адресное пространство.
Синхронизация процессов сложнее, так как процессы не разделяют память и должны использовать межпроцессорные коммуникации (IPC) для обмена данными.
Для синхронизации процессов применяются более тяжелые механизмы, такие как мьютексы, семафоры и именованные каналы (pipes).

2. Опишите объект мьютекс.
Мьютекс (mutex) — это объект синхронизации, который используется для обеспечения эксклюзивного доступа к ресурсу,
который может быть использован несколькими потоками или процессами. Мьютекс позволяет только одному потоку или процессу захватить его в данный момент времени,
блокируя остальные до тех пор, пока ресурс не будет освобожден.

3. Опишите принцип работы мьютекса.
Принцип работы мьютекса:
Создание: Мьютекс создается с помощью функции CreateMutex. Можно задать имя мьютекса, чтобы он мог быть использован несколькими процессами.
Захват: Поток или процесс, который хочет получить доступ к разделяемому ресурсу, должен захватить мьютекс с помощью функции WaitForSingleObject.
Если мьютекс уже захвачен, поток будет заблокирован до тех пор, пока мьютекс не будет освобожден.
Освобождение: Когда поток или процесс закончил работу с ресурсом, он должен освободить мьютекс с помощью функции ReleaseMutex, позволяя другим потокам или процессам захватить его.

4. Опишите параметры функции CreateMutex.
Функция CreateMutex имеет следующие параметры:
lpMutexAttributes: Указатель на структуру SECURITY_ATTRIBUTES, которая определяет наследование мьютекса дочерними процессами и его защищенность.
Если NULL, используются параметры по умолчанию.
bInitialOwner: Логическое значение, указывающее, будет ли вызывающий поток сразу же захватывать мьютекс. Если TRUE, вызывающий поток захватывает мьютекс.
lpName: Указатель на строку, содержащую имя мьютекса. Если имя указано, другие процессы могут открыть существующий мьютекс по этому имени. Если NULL, мьютекс будет безымянным.

5. Сравните мьютекс с критической секцией ОС.
Мьютекс:
Используется для синхронизации потоков в разных процессах.
Тяжеловесный объект синхронизации, так как включает системные вызовы для захвата и освобождения.
Может быть именованным, что позволяет различным процессам использовать один и тот же мьютекс.
Используется в случаях, когда необходима синхронизация между процессами или когда требуется длительное время блокировки.
Критическая секция (Critical Section):
Используется для синхронизации потоков внутри одного процесса.
Легковесный объект синхронизации, так как работает быстрее мьютекса за счет минимального использования системных ресурсов.
Не может быть использована для синхронизации между процессами.
Подходит для коротких блокировок, где важна высокая производительность.
