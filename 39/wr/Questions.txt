1. Опишите задачу о писателях и читателях.
Задача о писателях и читателях (Readers-Writers Problem) — это классическая проблема синхронизации в многопоточных системах. Основная задача состоит в том,
чтобы обеспечить правильный доступ к общим данным для нескольких потоков, одни из которых являются читателями, а другие — писателями.

Читатели: потоки, которые только читают данные и не изменяют их.
Писатели: потоки, которые могут изменять данные.
Ключевые условия задачи:

Множественные читатели могут одновременно читать данные, если нет писателей.
Только один писатель может изменять данные в любой момент времени.
Если писатель вносит изменения, ни один читатель не должен иметь доступ к данным до завершения записи.

2. В чем заключается синхронизация ресурсов?
Синхронизация ресурсов — это процесс управления доступом к общим ресурсам в многопоточной или многопроцессной среде,
чтобы избежать конфликтов и обеспечить корректное выполнение операций. Основные цели синхронизации:

Взаимное исключение (Mutual Exclusion): предотвращение одновременного доступа к ресурсу несколькими потоками или процессами.
Упорядочивание (Ordering): обеспечение выполнения операций в определенном порядке.
Избегание тупиков (Deadlock Avoidance): предотвращение ситуации, когда потоки или процессы блокируют друг друга, ожидая освобождения ресурсов.

3. Опишите семафор.
Семафор — это объект синхронизации, используемый для управления доступом к общим ресурсам.
Семафор может находиться в одном из двух состояний: сигнальном или несигнальном, и обычно включает счётчик:

Бинарный семафор: принимает значения 0 и 1 (аналог мьютекса).
Счётный семафор (Counting Semaphore): может принимать любое неотрицательное значение.

4. Опишите функцию создания семафора.
HANDLE CreateSemaphore(
  LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, // Указатель на структуру безопасности, может быть NULL
  LONG lInitialCount, // Начальное значение счётчика
  LONG lMaximumCount, // Максимальное значение счётчика
  LPCTSTR lpName // Имя семафора, может быть NULL
);

5. Опишите функцию освобождения семафора.
BOOL ReleaseSemaphore(
  HANDLE hSemaphore, // Дескриптор семафора
  LONG lReleaseCount, // Увеличение счётчика на это значение
  LPLONG lpPreviousCount // Указатель на переменную для предыдущего значения счётчика, может быть NULL
);

6. Опишите взаимодействие семафоров empty и full.
Взаимодействие семафоров empty и full обычно используется в задачах типа «производитель-потребитель»:
empty: показывает количество пустых мест в буфере. Начальное значение — размер буфера.
full: показывает количество заполненных мест в буфере. Начальное значение — 0.
Производитель:
Ожидает empty (уменьшает значение).
Записывает данные в буфер.
Увеличивает full.

Потребитель:
Ожидает full (уменьшает значение).
Читает данные из буфера.
Увеличивает empty.

